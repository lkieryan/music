// This file was generated by [ts-rs](https://github.com/Aleph-Alpha/ts-rs). Do not edit this file manually.

export type AudioInfo = { name: string, artist: string, album: string, lyric: string, cover_media_type: string, cover: Array<number>, 
/**
 * seconds
 */
duration: number, 
/**
 * seconds
 */
position: number, };

export type AudioQuality = { sample_rate: number, bits_per_coded_sample: number, bits_per_sample: number, channels: number, sample_format: string, codec: string, };

export type AudioThreadCommand = { "type": "resumeAudio" } | { "type": "pauseAudio" } | { "type": "resumeOrPauseAudio" } | { "type": "seekAudio", position: number, } | { "type": "jumpToSong", song_index: number, } | { "type": "prevSong" } | { "type": "nextSong" } | { "type": "setPlaylist", songs: Array<SongData>, } | { "type": "setVolume", volume: number, } | { "type": "setVolumeRelative", volume: number, } | { "type": "setAudioOutput", name: string, } | { "type": "setFFTRange", from_freq: number, to_freq: number, } | { "type": "syncStatus" } | { "type": "close" };

export type AudioThreadEvent = { "type": "playPosition", data: PlayPositionData, } | { "type": "loadProgress", data: LoadProgressData, } | { "type": "loadAudio", data: LoadAudioData, } | { "type": "loadingAudio", data: LoadingAudioData, } | { "type": "syncStatus", data: SyncStatus, } | { "type": "playListChanged", data: PlayListChangedData, } | { "type": "playStatus", data: PlayStatusData, } | { "type": "setDuration", data: SetDurationData, } | { "type": "loadError", data: LoadErrorData, } | { "type": "volumeChanged", data: VolumeChangedData, } | { "type": "fftData", data: FftData, };

export type BackgroundConfig = { layers: Array<BackgroundLayer>, opacity: number | null, blur: number | null, grain_opacity: number | null, };

export type BackgroundLayer = LinearLayer | RadialLayer | ConicLayer | ImageLayer;

export type BackgroundLayerBase = { opacity: number | null, blend_mode: string | null, position: string | null, size: string | null, repeat: string | null, };

export type ColorStop = { color: string, pos: number | null, };

export type ConicLayer = { type: LayerType, angle: number | null, at: string | null, stops: Array<ColorStop>, opacity: number | null, blend_mode: string | null, position: string | null, size: string | null, repeat: string | null, };

export type FftData = { data: Array<number>, };

export type GeneralSettings = { gaplessSkip: string | null, language: string | null, minimizeToTray: boolean | null, launchAtLogin: boolean | null, };

export type ImageLayer = { type: LayerType, url: string, opacity: number | null, blend_mode: string | null, position: string | null, size: string | null, repeat: string | null, };

export type LayerType = { "type": "linear" } | { "type": "radial" } | { "type": "conic" } | { "type": "image" };

export type LinearLayer = { type: LayerType, angle: number | null, stops: Array<ColorStop>, opacity: number | null, blend_mode: string | null, position: string | null, size: string | null, repeat: string | null, };

export type LoadAudioData = { music_id: string, music_info: AudioInfo, quality: AudioQuality, current_play_index: number, };

export type LoadErrorData = { error: string, };

export type LoadProgressData = { position: number, };

export type LoadingAudioData = { music_id: string, current_play_index: number, };

export type LyricsSettings = { playerImplementation: string | null, fontFamily: string | null, fontWeight: string | null, letterSpacing: string | null, sizePreset: string | null, lineBlurEffect: boolean | null, lineScaleEffect: boolean | null, lineSpringAnimation: boolean | null, advanceLineTiming: boolean | null, wordFadeWidth: number | null, translationLine: boolean | null, romanLine: boolean | null, swapTransRomanLine: boolean | null, backgroundRenderer: string | null, cssBackgroundProperty: string | null, backgroundFps: number | null, backgroundRenderScale: number | null, backgroundStaticMode: boolean | null, };

export type PlayListChangedData = { playlist: Array<SongData>, current_play_index: number, };

export type PlayPositionData = { position: number, };

export type PlayStatusData = { is_playing: boolean, };

export type ProviderInstancePref = { key: string, kind: ProviderKind, enabled: boolean, cfg: Record<string, any>, secure_ref: string | null, };

export type ProviderKind = "spotify" | "youtube" | "bilibili";

export type ProviderSelectorArg = { "type": "single", provider: ProviderKind, } | { "type": "all" } | { "type": "many", providers: Array<ProviderKind>, };

export type RadialLayer = { type: LayerType, shape: string | null, at: string | null, stops: Array<ColorStop>, opacity: number | null, blend_mode: string | null, position: string | null, size: string | null, repeat: string | null, };

export type SetDurationData = { duration: number, };

export type SongData = { "type": "local", file_path: string, orig_order: number, } | { "type": "custom", id: string, song_json_data: string, orig_order: number, };

export type SyncStatus = { music_id: string, music_info: AudioInfo, is_playing: boolean, duration: number, position: number, volume: number, load_position: number, playlist: Array<SongData>, current_play_index: number, playlist_inited: boolean, quality: AudioQuality, };

export type ThemeBackground = { app: BackgroundConfig, toolbar: BackgroundConfig | null, };

export type ThemeDetails = { meta: ThemeMeta, tokens: ThemeTokens, background: ThemeBackground, custom_css: string | null, };

export type ThemeMeta = { id: string, name: string, author: string | null, is_dark: boolean | null, version: string | null, };

export type ThemeTokens = { color_bg: string, color_surface: string, color_border: string, color_divider: string, text_primary: string, text_secondary: string, text_tertiary: string, text_disabled: string, accent: string, on_accent: string, state_hover_bg: string, state_pressed_bg: string, state_selected_bg: string, focus_ring: string, shadow_1: string, colors_border: string | null, menu_accent: string | null, };

export type VolumeChangedData = { volume: number, };
